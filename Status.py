import streamlit as st
import sqlite3
import pandas as pd
from controllers.auth import conectar
from controllers import db_utils # Para db_utils.get_or_create_status

def app(): # <--- Todo o cÃ³digo da pÃ¡gina deve estar aqui dentro
    st.title("ðŸš¦ Status de Ordem de ServiÃ§o (Visibilidade Limitada)")
    st.info("Esta pÃ¡gina nÃ£o estÃ¡ no menu principal, o status Ã© gerenciado na pÃ¡gina de Ordens de ServiÃ§o.")

    conn = conectar()
    cursor = conn.cursor()

    st.subheader("Cadastrar Novo Status")
    descricao = st.text_input("DescriÃ§Ã£o do Status")
    if st.button("Cadastrar Status"):
        if descricao:
            try:
                db_utils.get_or_create_status(cursor, descricao)
                conn.commit()
                st.success("Status cadastrado com sucesso!")
                st.rerun()
            except sqlite3.IntegrityError:
                st.error("Erro: Este status jÃ¡ existe.")
            except Exception as e:
                st.error(f"Ocorreu um erro inesperado: {e}")
            finally:
                conn.close()
        else:
            st.warning("A descriÃ§Ã£o Ã© obrigatÃ³ria.")

    st.subheader("Status Cadastrados")
    cursor.execute("SELECT id, descricao FROM Status ORDER BY descricao")
    status_list = cursor.fetchall()
    if status_list:
        df_status = pd.DataFrame(status_list, columns=["ID", "DescriÃ§Ã£o"])
        st.dataframe(df_status, hide_index=True)
    else:
        st.info("Nenhum status cadastrado.")
    conn.close()